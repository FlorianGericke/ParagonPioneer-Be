name: Update Database

on:
  push:
    branches: [ "main", "develop" ]

jobs:
  deploy-stage:
    runs-on: ubuntu-latest
    environment:
      name: stage

    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Run Database in Container
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_USER_PASSWORD }}
        run: |
          docker compose up -d
          sleep 20

      - name: Populate database
        run: |
          mysql -h 127.0.0.1 \
          -u"${{ secrets.MYSQL_USER }}" \
          -p"${{ secrets.MYSQL_USER_PASSWORD }}" \
          "${{ secrets.MYSQL_DATABASE }}" < .docker/dump/database-insert.sql

      - name: Dump Database
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        run: |
          DUMP_FILE_NAME="$(date +'%Y-%m-%d-%H-%M-%S')-dump.sql"
          docker exec YOUR_CONTAINER_NAME \
          mysqldump -uroot -p"$MYSQL_ROOT_PASSWORD" "$MYSQL_DATABASE" > "$DUMP_FILE_NAME"
          echo "Dump created: $DUMP_FILE_NAME"

  deploy-prod:
    runs-on: ubuntu-latest
    environment:
      name: production

    steps:
      - name: Check out
        run: echo "Production deployment not implemented yet"